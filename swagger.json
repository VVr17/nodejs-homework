{
  "openapi": "3.0.0",
  "info": {
    "version": "2.0.2",
    "title": "Phonebook Express API with Swagger",
    "description": "This is a simple CRUD API application made with Express and documented with Swagger"
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [
    {
      "url": "https://phonebook-node.up.railway.app"
    },
    {
      "url": "http://localhost:3000"
    }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "API for users in the system"
    },
    {
      "name": "Contacts",
      "description": "API for contacts in the system"
    }
  ],

  "paths": {
    "/api/users/signup": {
      "post": {
        "tags": ["Users"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "409": {
            "description": "Email already exist"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/users/verify": {
      "post": {
        "tags": ["Users"],
        "summary": "resend email confirmation",
        "parameters": [],
        "requestBody": {
          "description": "Registration object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email"],
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "User's email",
                    "format": "email",
                    "example": "example@mail.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Verification email has been sent",
            "content": {
              "application/json": {
                "sсhema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          }
        }
      }
    },

    "/api/users/login": {
      "post": {
        "tags": ["Users"],
        "summary": "User login",
        "parameters": [],
        "requestBody": {
          "description": "Login object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User has been logged in successfully",
            "content": {
              "application/json": {
                "sсhema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/users/current": {
      "get": {
        "tags": ["Users"],
        "summary": "Get current user",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "User has been found",
            "content": {
              "application/json": {
                "sсhema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/users/logout": {
      "get": {
        "tags": ["Users"],
        "summary": "User logout",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {
          "204": {
            "description": "User has been logged out",
            "content": {
              "application/json": {
                "sсhema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/users/": {
      "patch": {
        "tags": ["Users"],
        "summary": "Update user subscription",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Subscription",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User subscription has been updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/users/avatars": {
      "patch": {
        "tags": ["Users"],
        "summary": "Update user's avatar",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Avatar",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User avatar has been updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/contacts": {
      "get": {
        "tags": ["Contacts"],
        "summary": "Get all user contacts",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "user contacts",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contacts"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": ["Contacts"],
        "summary": "Add new contact",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "requestBody": {
          "description": "New user",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddUserRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Contact added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/contacts/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Id of contact that needs to be found",
          "type": "string",
          "format": "ObjectId"
        }
      ],
      "get": {
        "tags": ["Contacts"],
        "summary": "Get contact by Id",
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "contact with Id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": ["Contacts"],
        "summary": "Update contact with given Id",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Contact to update",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contact updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": ["Contacts"],
        "summary": "Delete contact with given Id",
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "contact has been deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/contacts/{id}/favorite": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Id of contact that needs to be found",
          "type": "string"
        }
      ],
      "patch": {
        "tags": ["Contacts"],
        "summary": "Update favorite status",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Favorite",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFavoriteRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contact updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "required": ["email", "password"],
        "properties": {
          "_id": {
            "type": "string",
            "uniqueItems": true
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "subscription": {
            "type": "string",
            "example": "business"
          },
          "avatar": {
            "type": "string"
          }
        }
      },
      "Users": {
        "type": "array",
        "$ref": "#/components/schemas/User"
      },
      "Contact": {
        "required": ["name", "email", "phone"],
        "properties": {
          "_id": {
            "type": "string",
            "uniqueItems": true
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "phone": {
            "type": "string"
          },
          "favorite": {
            "type": "boolean"
          }
        }
      },
      "Contacts": {
        "type": "array",
        "$ref": "#/components/schemas/Contact"
      },
      "SuccessResponse": {
        "type": "object",
        "required": ["message"],
        "properties": {
          "message": {
            "type": "string",
            "uniqueItems": true
          }
        }
      },
      "RegistrationRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "example@mail.com"
          },
          "password": {
            "type": "string",
            "description": "User`s password",
            "example": "password"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "example@mail.com"
          },
          "password": {
            "type": "string",
            "description": "User`s password",
            "example": "password"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "user": {
            "type": "object",
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "SubscriptionRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "subscription": {
            "type": "string",
            "description": "User subscription ['starter', 'pro', 'business']",
            "example": "business"
          }
        }
      },
      "AddUserRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "FirstName LastName"
          },
          "phone": {
            "type": "string",
            "example": "(123)-476-345-345"
          },
          "email": {
            "type": "string",
            "example": "example@example.com"
          },
          "favorite": {
            "type": "boolean",
            "example": "true"
          }
        }
      },
      "UpdateFavoriteRequest": {
        "type": "object",
        "properties": {
          "favorite": {
            "type": "boolean",
            "example": "true"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
